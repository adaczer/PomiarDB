@using ModalTut.Models
@model ModalTut.ViewModel.PomiarItems2ViewModel

<!--Open Modal Button -->
<button class="btn btn-success mb-4 btn-block" data-toggle="modal" data-target="#myModal2">DODAJ POZYCJĘ</button>

<!--Modal Add Position-->
<div class="modal" id="myModal2">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Wprowadź informacje:</div>
                <button class="close" data-dismiss="modal">&times;</button>
            </div>


            <div class="modal-body">

                <!--Form Add Position-->
                @using (Html.BeginForm("AddItems2", "Home", FormMethod.Post))
                {
                    <div class="row">
                        <div class="col-12">
                            @Html.HiddenFor(m => m.Items.PomiarId, new { @Value = ViewBag.ID })
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.Items.Uwagi, htmlAttributes: new { @class = "form-control", @placeholder = "Pomieszczenie (np. pokój, kuchnia itd" })
                                @Html.ValidationMessageFor(m => m.Items.Uwagi)
                            </div>

                            <div class="form-group">
                                @Html.DropDownListFor(m => m.Items.RodzajDrzwi, new List<SelectListItem>{
                               new SelectListItem {Text = "Drzwi wewnętrzne", Value = "Drzwi wewnętrzne" },
                               new SelectListItem{Text = "Drzwi przesuwne", Value = "Drzwi przesuwne"},
                               new SelectListItem{Text = "Drzwi nietypowe", Value = "Drzwi nietypowe"} },
                               "-- Wybierz rodzaj drzwi --", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Items.RodzajDrzwi, "", htmlAttributes: new { @class = "field-validation-error" })
                            </div>
                            <div class="form-group">
                                @Html.DropDownListFor(m => m.Items.SzerDrzwi, new List<SelectListItem>{
                          new SelectListItem {Text = "60 cm", Value = "60 cm" },
                          new SelectListItem{Text = "70 cm", Value = "70 cm"},
                          new SelectListItem{Text = "80 cm", Value = "80 cm"},
                          new SelectListItem{Text = "90 cm", Value = "90 cm"},
                          new SelectListItem{Text = "100 cm", Value = "100 cm"},
                          new SelectListItem{Text = "Inne", Value = "Inne"} },
                          "-- Wybierz szerokość drzwi --", htmlAttributes: new { @class = "form-control" })
                                @*@Html.DropDownListFor(m => m.Items.SzerDrzwi, EnumHelper.GetSelectList(typeof(Szerokosc)), "-- Wybierz szerokość drzwi --", htmlAttributes: new { @class = "form-control" })*@
                                @Html.ValidationMessageFor(m => m.Items.SzerDrzwi)
                            </div>

                            <div class="form-group">
                                @Html.DropDownListFor(m => m.Items.KierDrzwi, EnumHelper.GetSelectList(typeof(Kierunek)), "-- Wybierz kierunek drzwi --", htmlAttributes: new { @class = "form-control", @placeholder = "Kierunek" })
                                @Html.ValidationMessageFor(m => m.Items.KierDrzwi)
                            </div>

                            <div class="form-group">
                                @Html.DropDownListFor(m => m.Items.OscWym, new List<SelectListItem>{
                                 new SelectListItem {Text = "75-95", Value = "75-95" },
                                 new SelectListItem{Text = "100-120", Value = "100-120"},
                                 new SelectListItem{Text = "120-140", Value = "120-140"},
                                 new SelectListItem{Text = "140-160", Value = "140-160"},
                                 new SelectListItem{Text = "160-180", Value = "160-180"},
                                 new SelectListItem{Text = "180-200", Value = "180-200"},
                                 new SelectListItem{Text = "200-220", Value = "200-220"},
                                 new SelectListItem{Text = "220-240", Value = "220-240"},
                                 new SelectListItem{Text = "240-260", Value = "240-260"},
                                 new SelectListItem{Text = "260-280", Value = "260-280"},
                                 new SelectListItem{Text = "280-300", Value = "280-300"} },
                                 "-- Wybierz szerokość ościeżnicy --", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Items.OscWym)
                            </div>


                            <div class="form-group  form-control" style="height: 53px;">
                                <div class="form-check">
                                    <div class="row d-flex justify-content-between">

                                        <label class="form-check-label mt-2 col-md-9 " for="checkbox2">
                                            Opaska poszerzająca ?
                                        </label>
                                        @Html.CheckBoxFor(m => m.Items.IsOpaska, htmlAttributes: new { @class = "form-control col-md-2 defaultCheckbox ", @id = "checkbox2", @name = "checkbox2" })
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.Items.IsOpaska)
                            </div>

                            <div class="form-group">
                                @Html.TextBoxFor(m => m.Items.Ilosc, htmlAttributes: new { @class = "form-control", @placeholder = "Ilość" })
                                @Html.ValidationMessageFor(m => m.Items.Ilosc)
                            </div>
                        </div>
                    </div>



                    <div class="modal-footer">
                        <a href="#" class="btn btn-light" data-dismiss="modal">Anuluj</a>
                        <button type="submit" class="btn btn-success">DODAJ POZYCJĘ</button>
                    </div>
                }
                <!--/Form Add Position-->





            </div>
        </div>
    </div>
</div>
<style>
    .field-validation-error {
        color: red !important;
    }
</style>
